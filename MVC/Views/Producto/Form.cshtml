@model ML.Producto
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => Model.Id, "Id")

    <div class="row">
        @*2<div class="col-12">
            @Html.ValidationSummary("", new { @class = "text-danger" })
        </div>*@
        <div class="col-12">
            <h2>Datos del Producto</h2>
        </div>

        <div class="col-md-3">
            @Html.LabelFor(model => model.Nombre, "Nombre")
            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control validateTextOnly", placeholder = "Nombre" })
            @Html.ValidationMessage("Nombre", "Por favor introduzca el nombre", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Precio, "Precio")
            @Html.TextBoxFor(model => model.Precio, new { @class = "form-control validateNumbersOnly", placeholder = "precio" })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            @Html.LabelFor(model => model.Descripcion, "Descripcion")
            @Html.TextBoxFor(model => model.Descripcion, new { @class = "form-control validateDescription", placeholder = "Descrpción" })
        </div>
    </div>
    <hr>

    <div class="row">

        <div class="col-md-12">
            @Html.LabelFor(model => Model.Imagen, "Imagen")
            @if (Model.Imagen == null)
            {
                <img id="img" width="100" height="100" style="padding:10px" src="https://img.freepik.com/vector-gratis/dos-semillas-manzana_1308-18273.jpg?size=626&ext=jpg&ga=GA1.1.933601817.1717545600&semt=ais_user">
            }
            else
            {
                <img id="img" width="100" height="100" style="padding:10px" src="data:image/png;base64,@Model.Imagen">

            }
            <input name="file" type="file" class="form-control" id="imagen" onchange="validarImagen(), previsuailzarImagen(this)" />
            @Html.HiddenFor(model => Model.Imagen)
        </div>
    </div>
    <hr>
    <div class="row">

        <div class="col-4">
            @Html.LabelFor(model => model.SubCategoria.Categoria.Id, "Categoria")

            @Html.DropDownListFor(model => model.SubCategoria.Categoria.Id,
           new SelectList(Model.SubCategoria.Categoria.Categorias, "Id", "Nombre"), "Selecciona",
           new { @class = "form-control", onchange = "ConsultarSubCategorias();", @id = "ddlCategoria" })
        </div>
        <div class="col-4">
            @if (Model.SubCategoria.SubCategorias == null)
            {
                @Html.LabelFor(model => model.SubCategoria.Id, "SubCategorias")

                @Html.DropDownListFor(model => model.SubCategoria.Id,
               new SelectList(string.Empty, "Id", "Nombre"), "Selecciona",
               new { @class = "form-control", @id = "ddlSubCategoria" })

            }
            else
            {
                @Html.LabelFor(model => model.SubCategoria.Id, "SubCategorias")
                @Html.DropDownListFor(model => model.SubCategoria.Id,
               new SelectList(Model.SubCategoria.SubCategorias, "Id", "Nombre"), "Selecciona",
               new { @class = "form-control", @id = "ddlSubCategoria" })

            }
        </div>
    </div>
    <br>

    <div class="row">

        <div class="col-1">
            @if (Model.Id == 0)
            {
                <button type="submit"
                        class="btn btn-success">
                    <strong>Insertar</strong>
                </button>
            }
            else
            {
                <button type="submit"
                        class="btn btn-warning">
                    <strong>Modificar</strong>
                </button>
            }
        </div>

        <div class="col-1">
            <a href="@Url.Action("GetAll", "Producto")"
               class="btn btn-danger"
               onclick="return confirm('Estas seguro de que quieres cancelar?');">
                <span>
                    <strong>Cancelar</strong>
                </span>
            </a>
        </div>
    </div>
}

@section scripts {
    <script type="text/javascript">

        $(document).ready(function () {
        console.log("Jquery listo");
            $(".validateTextOnly").on("blur", function () { validateTextOnly(this); });
            $(".validateNumbersOnly").on("blur", function () { validateNumbersOnly(this); });
            $(".validateDescription").on("blur", function () { validateDescription(this); });
    });

    function validateTextOnly(inputValue) {
        var input = $(inputValue).val();
        var regex = /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/;
        if (!regex.test(input)) {
            alert("El campo solo puede contener letras y espacios.");
            $(inputValue).val("");
        }
    }
    function validateNumbersOnly(inputValue) {
        var input = $(inputValue).val();
        var regex = /^[0-9]+$/;
        if (!regex.test(input)) {
            alert("El campo solo puede contener números");
            $(inputValue).val("");
        }
    }
    function validateDescription(inputValue) {
        var input = $(inputValue).val();
        var regex = /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s.,\n]+$/;
        if (!regex.test(input)) {
            alert("El campo solo puede contener letras, espacios, puntos, comas y saltos de línea");
            $(inputValue).val("");
        }
    }

    function ConsultarSubCategorias() {
            $("#ddlSubCategoria").empty();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetSubCategoriasByIdCategoria", "Producto")',
                dataType: 'json',
                data: { 'Id': $("#ddlCategoria").val() },
                success: function (SubCategorias) {
                    $("#ddlSubCategoria").append('<option value="0">' +'Selecciona una opcion' +'</option>');
                    $.each(SubCategorias.Objects, function (i, SubCategorias) {
                        $("#ddlSubCategoria").append('<option value="' +
                            SubCategorias.Id + '">' +
                            SubCategorias.Nombre + '</option>');
                    });
            },
            error: function(ex) {
                alert('Failed: '+ex.ErrorMessaje);
            }
            });
        }

    function validarImagen() {
            var allowedExtension = ['jpeg', 'jpg', 'png'];
            var fileExtension = document.getElementById('imagen').value.split('.').pop().toLowerCase();
            var isValidFile = false;
            for (var index in allowedExtension) {
                if (fileExtension === allowedExtension[index]) {
                    isValidFile = true;
                    break;
                }
            }
            if (!isValidFile) {
                alert('Las extensiones permitidas son: *.' + allowedExtension.join(',*.'));
                document.getElementById('imagen').value = "";
            }
            return isValidFile
    }//mainf()

    function previsuailzarImagen(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
    </script>
}